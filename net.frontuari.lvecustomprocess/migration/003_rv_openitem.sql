CREATE OR REPLACE VIEW adempiere.rv_openitem
AS SELECT io.ad_org_id,
    io.ad_client_id,
    io.documentno,
    io.c_invoice_id,
    io.c_order_id,
    io.c_bpartner_id,
    io.issotrx,
    io.dateinvoiced,
    io.dateacct,
    io.netdays,
    io.duedate,
    io.daysdue,
    io.discountdate,
    io.discountamt,
    io.grandtotal,
    io.paidamt,
    io.openamt,
    io.c_currency_id,
    io.c_conversiontype_id,
    io.c_paymentterm_id,
    io.ispayschedulevalid,
    io.c_invoicepayschedule_id,
    io.invoicecollectiontype,
    io.c_campaign_id,
    io.c_project_id,
    io.c_activity_id,
    io.ad_orgtrx_id,
    io.ad_user_id,
    io.c_bpartner_location_id,
    io.c_charge_id,
    io.c_doctype_id,
    io.c_doctypetarget_id,
    io.c_dunninglevel_id,
    io.chargeamt,
    io.c_payment_id,
    io.created,
    io.createdby,
    io.dateordered,
    io.dateprinted,
    io.description,
    io.docaction,
    io.docstatus,
    io.dunninggrace,
    io.generateto,
    io.isactive,
    io.isapproved,
    io.isdiscountprinted,
    io.isindispute,
    io.ispaid,
    io.isprinted,
    io.isselfservice,
    io.istaxincluded,
    io.istransferred,
    io.m_pricelist_id,
    io.m_rma_id,
    io.paymentrule,
    io.poreference,
    io.posted,
    io.processedon,
    io.processing,
    io.ref_invoice_id,
    io.reversal_id,
    io.salesrep_id,
    io.sendemail,
    io.totallines,
    io.updated,
    io.updatedby,
    io.user1_id,
    io.user2_id
   FROM ( SELECT i.ad_org_id,
            i.ad_client_id,
            i.documentno,
            i.c_invoice_id,
            i.c_order_id,
            i.c_bpartner_id,
            i.issotrx,
            i.dateinvoiced,
            i.dateacct,
            p.netdays,
            paymenttermduedate(i.c_paymentterm_id, i.dateacct::timestamp with time zone) AS duedate,
            paymenttermduedays(i.c_paymentterm_id, i.dateacct::timestamp with time zone, getdate()) AS daysdue,
            adddays(i.dateacct::timestamp with time zone, p.discountdays) AS discountdate,
            currencyround(i.grandtotal * p.discount / 100::numeric, i.c_currency_id, 'N'::character varying) AS discountamt,
            i.grandtotal,
            invoicepaidnegttype(i.c_invoice_id, i.c_currency_id, 1::numeric, bp.typenegotiation) AS paidamt,
            invoiceopennegttype(i.c_invoice_id, 0::numeric, bp.typenegotiation) AS openamt,
            i.c_currency_id,
            i.c_conversiontype_id,
            i.c_paymentterm_id,
            i.ispayschedulevalid,
            NULL::numeric AS c_invoicepayschedule_id,
            i.invoicecollectiontype,
            i.c_campaign_id,
            i.c_project_id,
            i.c_activity_id,
            i.c_invoice_ad_orgtrx_id AS ad_orgtrx_id,
            i.ad_user_id,
            i.c_bpartner_location_id,
            i.c_charge_id,
            i.c_doctype_id,
            i.c_doctypetarget_id,
            i.c_dunninglevel_id,
            i.chargeamt,
            i.c_payment_id,
            i.created,
            i.createdby,
            i.dateordered,
            i.dateprinted,
            i.description,
            i.docaction,
            i.docstatus,
            i.dunninggrace,
            i.generateto,
            i.isactive,
            i.isapproved,
            i.isdiscountprinted,
            i.isindispute,
            i.ispaid,
            i.isprinted,
            i.c_invoice_isselfservice AS isselfservice,
            i.istaxincluded,
            i.istransferred,
            i.m_pricelist_id,
            i.m_rma_id,
            i.paymentrule,
            i.poreference,
            i.posted,
            i.processedon,
            i.processing,
            i.ref_invoice_id,
            i.reversal_id,
            i.salesrep_id,
            i.sendemail,
            i.totallines,
            i.updated,
            i.updatedby,
            i.user1_id,
            i.user2_id
           FROM rv_c_invoice i
             JOIN c_bpartner bp ON i.c_bpartner_id = bp.c_bpartner_id
             JOIN c_paymentterm p ON i.c_paymentterm_id = p.c_paymentterm_id
          WHERE i.ispayschedulevalid <> 'Y'::bpchar AND (i.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar]))) io
  WHERE io.openamt <> 0::numeric
UNION
 SELECT iod.ad_org_id,
    iod.ad_client_id,
    iod.documentno,
    iod.c_invoice_id,
    iod.c_order_id,
    iod.c_bpartner_id,
    iod.issotrx,
    iod.dateinvoiced,
    iod.dateacct,
    iod.netdays,
    iod.duedate,
    iod.daysdue,
    iod.discountdate,
    iod.discountamt,
    iod.grandtotal,
    iod.paidamt,
    iod.openamt,
    iod.c_currency_id,
    iod.c_conversiontype_id,
    iod.c_paymentterm_id,
    iod.ispayschedulevalid,
    iod.c_invoicepayschedule_id,
    iod.invoicecollectiontype,
    iod.c_campaign_id,
    iod.c_project_id,
    iod.c_activity_id,
    iod.ad_orgtrx_id,
    iod.ad_user_id,
    iod.c_bpartner_location_id,
    iod.c_charge_id,
    iod.c_doctype_id,
    iod.c_doctypetarget_id,
    iod.c_dunninglevel_id,
    iod.chargeamt,
    iod.c_payment_id,
    iod.created,
    iod.createdby,
    iod.dateordered,
    iod.dateprinted,
    iod.description,
    iod.docaction,
    iod.docstatus,
    iod.dunninggrace,
    iod.generateto,
    iod.isactive,
    iod.isapproved,
    iod.isdiscountprinted,
    iod.isindispute,
    iod.ispaid,
    iod.isprinted,
    iod.isselfservice,
    iod.istaxincluded,
    iod.istransferred,
    iod.m_pricelist_id,
    iod.m_rma_id,
    iod.paymentrule,
    iod.poreference,
    iod.posted,
    iod.processedon,
    iod.processing,
    iod.ref_invoice_id,
    iod.reversal_id,
    iod.salesrep_id,
    iod.sendemail,
    iod.totallines,
    iod.updated,
    iod.updatedby,
    iod.user1_id,
    iod.user2_id
   FROM ( SELECT i.ad_org_id,
            i.ad_client_id,
            i.documentno,
            i.c_invoice_id,
            i.c_order_id,
            i.c_bpartner_id,
            i.issotrx,
            i.dateinvoiced,
            i.dateacct,
            daysbetween(ips.duedate::timestamp with time zone, i.dateacct::timestamp with time zone) AS netdays,
            ips.duedate,
            daysbetween(getdate(), ips.duedate::timestamp with time zone) AS daysdue,
            ips.discountdate,
            ips.discountamt,
            ips.dueamt AS grandtotal,
            invoicepaidnegttype(i.c_invoice_id, i.c_currency_id, 1::numeric, bp.typenegotiation) AS paidamt,
            invoiceopennegttype(i.c_invoice_id, ips.c_invoicepayschedule_id, bp.typenegotiation) AS openamt,
            i.c_currency_id,
            i.c_conversiontype_id,
            i.c_paymentterm_id,
            i.ispayschedulevalid,
            ips.c_invoicepayschedule_id,
            i.invoicecollectiontype,
            i.c_campaign_id,
            i.c_project_id,
            i.c_activity_id,
            i.c_invoice_ad_orgtrx_id AS ad_orgtrx_id,
            i.ad_user_id,
            i.c_bpartner_location_id,
            i.c_charge_id,
            i.c_doctype_id,
            i.c_doctypetarget_id,
            i.c_dunninglevel_id,
            i.chargeamt,
            i.c_payment_id,
            i.created,
            i.createdby,
            i.dateordered,
            i.dateprinted,
            i.description,
            i.docaction,
            i.docstatus,
            i.dunninggrace,
            i.generateto,
            i.isactive,
            i.isapproved,
            i.isdiscountprinted,
            i.isindispute,
            i.ispaid,
            i.isprinted,
            i.c_invoice_isselfservice AS isselfservice,
            i.istaxincluded,
            i.istransferred,
            i.m_pricelist_id,
            i.m_rma_id,
            i.paymentrule,
            i.poreference,
            i.posted,
            i.processedon,
            i.processing,
            i.ref_invoice_id,
            i.reversal_id,
            i.salesrep_id,
            i.sendemail,
            i.totallines,
            i.updated,
            i.updatedby,
            i.user1_id,
            i.user2_id
           FROM rv_c_invoice i
             JOIN c_bpartner bp ON i.c_bpartner_id = bp.c_bpartner_id
             JOIN c_invoicepayschedule ips ON i.c_invoice_id = ips.c_invoice_id
          WHERE i.ispayschedulevalid = 'Y'::bpchar AND (i.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar])) AND ips.isvalid = 'Y'::bpchar) iod
  WHERE iod.openamt <> 0::numeric;